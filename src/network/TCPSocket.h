#pragma once

namespace crown
{

namespace network
{
	class IPv4Address;

	/**
	// Abstraction of sys/socket which rapresents
	// a TCP connection socket.
	**/
	class TCPSocket
	{
	public:

					// Constructor
					TCPSocket();
					// Destructor
					~TCPSocket();
					// Open connection (server side)
		bool 		open(unsigned short port);
					// Connect (client side)
		bool		connect(IPv4Address& destination);
					// Close connection
		int			close();
					// Send data through socket
		bool 		send(const void* data, int size);
					// Receive data through socket
		int			receive(void* data, int size);
					// Is connection open?
		bool 		is_open();
					// Getter method for socket descriptor
		int 		get_socket_id();
					// Getter method for active socket descriptor
		int 		get_active_socket_id();

	protected:

					// Setter method for socket descriptor
		void 		set_socket_id(int socket);
					// Setter method for ative socket descriptor
		void 		set_active_socket_id(int socket);

	private:

					// Generated by ::socket
		int 		m_socket;
				  // Generated by ::accept
		int 		m_active_socket;
	};
}
}


