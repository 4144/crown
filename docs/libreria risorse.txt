#########################
#   Libreria risorse    #
#########################
Un file di libreria contiene un 'file system virtuale' in cui possono essere inseriti file di risorse, organizzati in 
directory. E' eventualmente possibile comprimere le risorse.

Struttura del file:
I file e le directory sono rappresentati da delle entry contenute in blocchi di entry (o più semplicemente blocchi).
Ogni blocco può contenere al massimo MAX_ENTRY_COUNT entry, per rappresentarne di più è possibile concatenare più 
blocchi tramite l'apposito campo nextBlockOffset.
In generale non c'è nessun vincolo sulla contiguità dei blocchi, ma è preferibile posizionarli vicini per motivi di eff
icienza.
Ogni file di libreria inizia con un header che identifica il tipo e la versione del file.
Subito dopo l'header è presente un blocco che rappresenta la radice del file system. I blocchi possono contenere indiff
erentemente file e directory.
I file hanno dei dati, mentre le directory hanno un delle entry 'figlie'. Per questo, il campo contentOffset nel primo 
caso indica l'inizio dei dati, mentre nel secondo indica l'offset del blocco di entry figlie.

LibraryHeader
{
  uint magicNumber = 0xbabbe000;
  ushort version;
}

Block
{
	uint nextBlockOffset;
	uint entriesCount;
	Descriptor[entriesCount]
	{
		uint ID;		//ID univoco
		ushort type;		//Tipo della risorsa
		char name[16];		//Nome (massimo 15 caratteri + '\0')
		uint contentOffset;	//Se è una directory, punta al blocco dei figli, altrimenti ai dati della risorsa
		uint contentSize;	//Se non è una directory indica la dimensione dei dati
		uchar compression;	//Compressione, per ora nessuna supportata
	};
}

---------Tipi risorse----------

>Directory
 Nome del tipo: RT_DIRECTORY
 - Sezione dati:
   non presente

>Image
 Nome del tipo: RT_IMAGE
 - Note:
   E' salvata dall'alto verso il basso.
 - Sezione dati:
   uint width;
   uint height;
   uint pixelFormat;
   byte imageData[width*height*getBytesPerPixel(pixelFormat)];